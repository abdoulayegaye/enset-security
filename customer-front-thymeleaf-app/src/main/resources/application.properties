spring.application.name=customer-app
server.port=8083
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true

#Authentication Google
spring.security.oauth2.client.registration.google.client-id=918393501444-6g39uuqp0obo9rbet37joib6fk77l5d9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email

#Authentication Github
spring.security.oauth2.client.registration.github.client-id=6059943e4e7889cfa26b
spring.security.oauth2.client.registration.github.client-secret=b3a8fb8d1ba0f3b8fc2e48b831c4f4af575b0529
spring.security.oauth2.client.provider.github.user-name-attribute=login

#Authentication Keycloak
spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=sdia-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=KRGKEYrbMUfF0JVHKiK1grKUpLT1pCYJ
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8083/login/oauth2/code/sdia-customer-client
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9999/realms/sdia-realm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
